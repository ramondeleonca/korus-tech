// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "username", type: "string", unique: true },
      { name: "email", type: "email", unique: true },
      { name: "emailVerified", type: "bool", defaultValue: "false" },
      { name: "birthdate", type: "datetime" },
      { name: "password", type: "string" },
      { name: "country", type: "string" },
      { name: "name", type: "string" },
      { name: "pfp", type: "link", link: { table: "images" } },
    ],
  },
  { name: "songs", columns: [] },
  {
    name: "images",
    columns: [
      { name: "small", type: "file" },
      { name: "medium", type: "file" },
      { name: "large", type: "file" },
      { name: "original", type: "file" },
    ],
    revLinks: [{ column: "pfp", table: "users" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Songs = InferredTypes["songs"];
export type SongsRecord = Songs & XataRecord;

export type Images = InferredTypes["images"];
export type ImagesRecord = Images & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  songs: SongsRecord;
  images: ImagesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://anthm-unpcgr.us-east-1.xata.sh/db/korus",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
